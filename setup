#!/bin/sh

echo "\nDotfile Setup\n-------------"
echo "Creating environment variables..."
export DOTFILES=$HOME/dotfiles

# Zsh Setup
echo "\nSetting up zsh..."
if [ ! -f "/bin/zsh" ]; then
    while true; do
        read -p "Could not find zsh, do you want to install it via oh-my-zsh? [y/n]" yn
        case $yn in
            [Yy]* ) curl -L http://install.ohmyz.sh | sh
                    chsh -s /bin/zsh
                    source $HOME/.zshrc
                    break;;
            [Nn]* ) break;;
            * ) echo "Please answer yes or no.\n";;
        esac
    done
fi

# Install Fonts
echo "Checking fonts..."
if [ -d "$HOME/.fonts" ]; then
    echo ".fonts directory already exists, skipping ahead..."
else
    echo "Installing fonts..."
    mkdir -p $HOME/.fonts
    cp -r $DOTFILES/fonts/* $HOME/.fonts
fi

# Install Homebrew
echo "\nInstalling Homebrew..."
ruby -e "$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)"

# Install brew formulae
source brew_packages
brew_install $packages

echo "Setting up Python..."
pyenv install 3.6.1
pyenv shell 3.6.1
echo "Installing Python packages with pip..."
pip install -r $DOTFILES/pip_requirements.txt

# Node Setup
echo "Setting up Node Packages..."
./npm_modules

if [ -f "$HOME/.zshrc" ]; then
    echo "The .zshrc file already exists, backing it up..."
    cp $HOME/.zshrc $DOTFILES/dotfile_backups/.zshrc_backup
fi
echo "Linking .zshrc..."
ln -sfv $DOTFILES/zsh/.zshrc $HOME/.zshrc

# Vim Setup
echo "/nSetting up vim..."
if [ -f "$HOME/.vimrc" ]; then
    echo "The .vimrc file already exists, backing it up..."
    cp $HOME/.vimrc $DOTFILES/dotfile_backups/.vimrc_backup
fi
echo "Linking .vimrc..."
ln -sfv $DOTFILES/vim/.vimrc $HOME/.vimrc

mkdir -p $HOME/.vim/spell/
ln -sfv $DOTFILES/vim/spell/en.utf-8.spl $HOME/.vim/spell/
echo "Installing vim bundles..."
source ~/.zshrc
vim +BundleInstall +qall

# Git Setup
echo "/nSetting up git configuration..."
if [ -f "$HOME/.gitconfig" ]; then
    echo "The .gitconfig file already exists, backing it up..."
    cp $HOME/.gitconfig $DOTFILES/dotfile_backups/.gitconfig_backup
fi
echo "Linking .gitconfig..."
ln -sfv $DOTFILES/git/.gitconfig $HOME/.gitconfig
echo "Linking git hooks..."
ln -sfv $DOTFILES/git/git_hooks/post-merge $DOTFILES/.git/hooks/post-merge

echo "\nInitial Git Setup\n-----------------"
while true; do
    echo "The current git user is $(git config --global user.name) <$(git config --global user.email)>."
    read -p "Do you wish specify the git user right now? [y/n] " yn
    case $yn in
        [Yy]* ) echo
                read -p "What is the git user name? [First Last] " name
                git config --global user.name "$name"
                echo
                read -p "What is the git user email? " email
                git config --global user.email "$email"
                break;;
        [Nn]* ) break;;
        * ) echo "Please answer yes or no.\n";;
    esac
done

# Mercurial Setup
echo "\nSetting up mercurial configuration..."
if [ -f "$HOME/.hgrc" ]; then
    echo "The .hgrc file already exist, backing it up..."
    cp $HOME/.hgrc $DOTFILES/dotfile_backups/.hgrc_backup
fi
echo "Linking .hgrc..."
ln -sfv $DOTFILES/hg/.hgrc $HOME/.hgrc

# Mac Preference Setup
if [[ "$OSTYPE" == "darwin"* ]]; then
    echo "\nDarwin OS found, setting preferences..."
    defaults write -g ApplePressAndHoldEnabled -bool false
    defaults write -g KeyRepeat -int 1
    defaults write -g InitialKeyReapt 1.5
    chflags nohidden $HOME/Library/
    defaults write com.apple.Dock autohide-delay -float 0
    defaults write com.apple.dock expose-animation-duration -float 0.1
    killall Dock
fi
